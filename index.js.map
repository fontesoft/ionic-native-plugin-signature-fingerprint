{"version":3,"sources":["../../../src/@fontesoft/plugins/signature-fingerprint/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAgB;AAC3C,OAAO,EAAE,MAAA,EAAQ,OAAA,EAAS,iBAAA,EAAkB,MAAO,oBAAA,CAAqB;AAExE;;;;;;;;;;;;;;;;;;;;;;;;;GAyBG;AASH,IAAa,oBAAoB;IAAS,wCAAiB;IAA3D;;IA0BA,CAAC;IAxBC;;;OAGG;IAEH,2CAAY,GAAZ;QACE,MAAM,CAAC,CAAC,yDAAyD;IACnE,CAAC;IAED;;;OAGG;IAEH,6CAAc,GAAd;QACE,MAAM,CAAC,CAAC,yDAAyD;IACnE,CAAC;IAQH,2BAAC;AAAD,CA1BA,AA0BC,CA1ByC,iBAAiB,GA0B1D;AANM,+BAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;CACnB,CAAC;AACF,kBAAkB;AACX,mCAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;AAlBA;IADC,OAAO,EAAE;;;;wDAGT;AAOD;IADC,OAAO,EAAE;;;;0DAGT;AAlBU,oBAAoB;IARhC,MAAM,CAAC;QACN,UAAU,EAAE,sBAAsB;QAClC,MAAM,EAAE,sCAAsC;QAC9C,SAAS,EAAE,iCAAiC;QAC5C,IAAI,EAAE,mEAAmE;QACzE,SAAS,EAAE,CAAC,SAAS,CAAC;KACvB,CAAC;GAEW,oBAAoB,CA0BhC;SA1BY,oBAAoB","file":"index.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Plugin, Cordova, IonicNativePlugin } from '@ionic-native/core';\n\n/**\n * @name Signature Fingerprint\n * @description\n * This plugin does something\n *\n * @usage\n * ```typescript\n * import { SignatureFingerprint } from '@ionic-native/signature-fingerprint';\n *\n *\n * constructor(private signatureFingerprint: SignatureFingerprint) { }\n *\n * ...\n *\n *\n * this.signatureFingerprint.getSignature()\n *   .then((res: any) => console.log(res))\n *   .catch((error: any) => console.error(error));\n *\n *\n * this.signatureFingerprint.getPackageName()\n *   .then((res: any) => console.log(res))\n *   .catch((error: any) => console.error(error));\n *\n * ```\n */\n@Plugin({\n  pluginName: 'SignatureFingerprint',\n  plugin: 'cordova-plugin-signature-fingerprint', // npm package name, example: cordova-plugin-camera\n  pluginRef: 'cordova.getSignatureFingerprint', // the variable reference to call the plugin, example: navigator.geolocation\n  repo: 'https://github.com/fontesoft/cordova-plugin-signature-fingerprint', // the github repository URL for the plugin\n  platforms: ['Android'], // Array of platforms supported, example: ['Android', 'iOS']\n})\n\nexport class SignatureFingerprint extends IonicNativePlugin {\n\n  /**\n   * Returns the signature fingerprint of the app\n   * @return {Promise<any>} Returns a promise that resolves when something happens\n   */\n  @Cordova()\n  getSignature(): Promise<any> {\n    return; // We add return; here to avoid any IDE / Compiler errors\n  }\n\n  /**\n   * Returns the package name of the app\n   * @return {Promise<any>} Returns a promise that resolves when something happens\n   */\n  @Cordova()\n  getPackageName(): Promise<any> {\n    return; // We add return; here to avoid any IDE / Compiler errors\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}